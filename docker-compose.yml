

services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  redis-bloom:
    image: redislabs/rebloom:latest
    container_name: redis-bloom
    ports:
      - "6380:6379"

  fastapi:
    build: .
    container_name: fastapi-app
    depends_on:
      - kafka
      - redis
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - REDIS_HOST=redis

#  grafana:
#    image: grafana/grafana-enterprise
#    container_name: grafana
#    restart: unless-stopped
#    ports:
#      - '3000:3000'
#    volumes:
#      - grafana-storage:/var/lib/grafana

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  alembic:
    build:
      context: .
    command: alembic upgrade head
    env_file:
      - .env
    depends_on:
      - postgres

volumes:
    pg_data:
