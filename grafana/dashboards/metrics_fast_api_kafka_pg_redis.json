{
  "__inputs": [
    {"name":"DS_PROMETHEUS","label":"Prometheus","type":"datasource","pluginId":"prometheus","pluginName":"Prometheus"}
  ],
  "__requires": [
    {"type":"grafana","id":"grafana","name":"Grafana","version":"10.x"},
    {"type":"datasource","id":"prometheus","name":"Prometheus","version":"2.x"},
    {"type":"panel","id":"timeseries","name":"Time series","version":"10.x"},
    {"type":"panel","id":"stat","name":"Stat","version":"10.x"},
    {"type":"panel","id":"gauge","name":"Gauge","version":"10.x"}
  ],
  "title":"War Room — Focus (FastAPI + Kafka + PG + Redis)",
  "uid":"war-room-focus",
  "timezone":"browser",
  "schemaVersion":38,
  "version":1,
  "style":"dark",
  "tags":["loadtest","focus","fastapi","kafka","postgres","redis"],
  "time":{"from":"now-30m","to":"now"},
  "timepicker":{"refresh_intervals":["5s","10s","30s","1m"],"time_options":["15m","30m","1h","3h"]},
  "refresh":"10s",
  "templating":{"list":[
    {"name":"DS_PROMETHEUS","type":"datasource","query":"prometheus","label":"Prometheus"},
    {"name":"fastapi_job","type":"query","datasource":"${DS_PROMETHEUS}","refresh":1,"query":"label_values(up, job)","label":"FastAPI job","current":{"text":"fastapi","value":"fastapi"}},
    {"name":"topic","type":"query","datasource":"${DS_PROMETHEUS}","refresh":1,"query":"label_values(kafka_topic_partition_current_offset, topic)","label":"Kafka topic","current":{"text":"products_events","value":"products_events"}},
    {"name":"group","type":"query","datasource":"${DS_PROMETHEUS}","refresh":1,"query":"label_values(kafka_consumergroup_lag, consumergroup)","label":"Consumer group","current":{"text":"products_consumer_group","value":"products_consumer_group"}},
    {"name":"redis_cmd","type":"custom","options":[{"text":"bf.add","value":"bf.add"},{"text":"get","value":"get"},{"text":"set","value":"set"}],"current":{"text":"bf.add","value":"bf.add"},"label":"Redis command"},
    {"name":"container","type":"textbox","label":"App container name (cAdvisor)","query":"fastapi-app"},
    {"name":"cadvisor_job","type":"textbox","label":"cAdvisor job (if used)","query":"cadvisor"}
  ]},
  "panels":[
    {
      "type":"timeseries",
      "title":"FastAPI p95 & p99 latency (ms)",
      "id":10,
      "gridPos":{"h":7,"w":24,"x":0,"y":0},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"1000 * histogram_quantile(0.95, sum by (le) (rate(http_request_duration_seconds_bucket{job=\"${fastapi_job}\"}[5m])))","legendFormat":"p95","refId":"A"},
        {"expr":"1000 * histogram_quantile(0.99, sum by (le) (rate(http_request_duration_seconds_bucket{job=\"${fastapi_job}\"}[5m])))","legendFormat":"p99","refId":"B"}
      ],
      "fieldConfig":{"defaults":{"unit":"ms","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":400}]}},"overrides":[]}
    },

    {
      "type":"timeseries",
      "title":"Kafka Lag by partition (group=${group}, topic=${topic})",
      "id":20,
      "gridPos":{"h":8,"w":24,"x":0,"y":7},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"sum by (partition) (kafka_consumergroup_lag{consumergroup=\"${group}\", topic=\"${topic}\"})","legendFormat":"partition {{partition}}","refId":"A"}
      ],
      "fieldConfig":{"defaults":{}}
    },

    {
      "type":"timeseries",
      "title":"Postgres TPS (commit & rollback)",
      "id":30,
      "gridPos":{"h":7,"w":12,"x":0,"y":15},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"sum(rate(pg_stat_database_xact_commit[5m]))","legendFormat":"commit/s","refId":"A"},
        {"expr":"sum(rate(pg_stat_database_xact_rollback[5m]))","legendFormat":"rollback/s","refId":"B"}
      ],
      "fieldConfig":{"defaults":{"unit":"ops"}}
    },
    {
      "type":"timeseries",
      "title":"App message processing latency p95 (ms)",
      "description":"Замените метрику на свою, если иная: app_event_process_seconds_bucket",
      "id":31,
      "gridPos":{"h":7,"w":12,"x":12,"y":15},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"1000 * histogram_quantile(0.95, sum by (le) (rate(app_event_process_seconds_bucket[5m])))","legendFormat":"p95","refId":"A"}
      ],
      "fieldConfig":{"defaults":{"unit":"ms","thresholds":{"mode":"absolute","steps":[{"color":"green","value":null},{"color":"red","value":400}]}}}
    },

    {
      "type":"timeseries",
      "title":"Redis ops/sec & hit ratio (%)",
      "id":40,
      "gridPos":{"h":7,"w":12,"x":0,"y":22},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"sum(rate(redis_commands_processed_total[5m]))","legendFormat":"ops/s","refId":"A"},
        {"expr":"100 * ((increase(redis_keyspace_hits_total[5m]) or vector(0)) / clamp_min(((increase(redis_keyspace_hits_total[5m]) or vector(0)) + (increase(redis_keyspace_misses_total[5m]) or vector(0))),1))","legendFormat":"hit %","refId":"B"}
      ],
      "fieldConfig":{"defaults":{}}
    },
    {
      "type":"timeseries",
      "title":"Redis command latency p95 (usec) — ${redis_cmd}",
      "id":41,
      "gridPos":{"h":7,"w":12,"x":12,"y":22},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"quantile_over_time(0.95, redis_latency_percentiles_usec{cmd=\"${redis_cmd}\",quantile=\"50\"}[5m])","legendFormat":"p95 ${redis_cmd}","refId":"A"}
      ],
      "fieldConfig":{"defaults":{"unit":"µs"}}
    },

    {
      "type":"timeseries",
      "title":"Kafka Producer — send/s & errors/s (app metrics)",
      "description":"Если нет этих метрик, замените на ваши: app_kafka_producer_send_total, app_kafka_producer_error_total",
      "id":50,
      "gridPos":{"h":7,"w":12,"x":0,"y":29},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"sum(rate(app_kafka_producer_send_total[1m])) or vector(0)","legendFormat":"send/s","refId":"A"},
        {"expr":"sum(rate(app_kafka_producer_error_total[1m])) or vector(0)","legendFormat":"errors/s","refId":"B"}
      ],
      "fieldConfig":{"defaults":{"unit":"ops"}}
    },
    {
      "type":"timeseries",
      "title":"Kafka Producer queue size (app metric)",
      "description":"Если нет — экспортируйте gauge app_kafka_producer_queue_size",
      "id":51,
      "gridPos":{"h":7,"w":12,"x":12,"y":29},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"max(app_kafka_producer_queue_size) or vector(0)","legendFormat":"queue size","refId":"A"}
      ]
    },

    {
      "type":"timeseries",
      "title":"App CPU % (cAdvisor container=${container})",
      "id":60,
      "gridPos":{"h":7,"w":12,"x":0,"y":36},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"100 * sum by (name) (rate(container_cpu_usage_seconds_total{name=\"${container}\"}[1m]))","legendFormat":"CPU % ${container}","refId":"A"}
      ],
      "fieldConfig":{"defaults":{"unit":"percent"}}
    },
    {
      "type":"timeseries",
      "title":"Node CPU % (fallback)",
      "id":61,
      "gridPos":{"h":7,"w":12,"x":12,"y":36},
      "datasource":"${DS_PROMETHEUS}",
      "targets":[
        {"expr":"100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)","legendFormat":"node cpu%","refId":"A"}
      ],
      "fieldConfig":{"defaults":{"unit":"percent"}}
    }
  ]
}
